ðŸ“‚ Football-Management-System/
â”‚
â”œâ”€â”€ ðŸ“‚ backend/
â”‚   â”œâ”€â”€ ðŸ“‚ config/               # Configuration files
â”‚   â”‚   â”œâ”€â”€ db.config.js         # Database configuration
â”‚   â”‚   â”œâ”€â”€ auth.config.js       # Authentication configuration
â”‚   â”‚   â””â”€â”€ env.config.js        # Environment variables configuration
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ models/               # Database models (Sequelize ORM)
â”‚   â”‚   â”œâ”€â”€ User.js              # User model
â”‚   â”‚   â”œâ”€â”€ UserRole.js          # UserRole model
â”‚   â”‚   â”œâ”€â”€ GameStatus.js        # GameStatus model
â”‚   â”‚   â”œâ”€â”€ CompetitionType.js   # CompetitionType model
â”‚   â”‚   â”œâ”€â”€ Season.js            # Season model
â”‚   â”‚   â”œâ”€â”€ Stadium.js           # Stadium model
â”‚   â”‚   â”œâ”€â”€ Referee.js           # Referee model
â”‚   â”‚   â”œâ”€â”€ Club.js              # Club model
â”‚   â”‚   â”œâ”€â”€ Team.js              # Team model
â”‚   â”‚   â”œâ”€â”€ Competition.js       # Competition model
â”‚   â”‚   â”œâ”€â”€ Player.js            # Player model
â”‚   â”‚   â”œâ”€â”€ Contract.js          # Contract model
â”‚   â”‚   â”œâ”€â”€ Staff.js             # Staff model
â”‚   â”‚   â”œâ”€â”€ StaffAssignment.js   # StaffAssignment model
â”‚   â”‚   â”œâ”€â”€ Game.js              # Game model
â”‚   â”‚   â”œâ”€â”€ Goal.js              # Goal model
â”‚   â”‚   â”œâ”€â”€ Substitution.js      # Substitution model
â”‚   â”‚   â”œâ”€â”€ Booking.js           # Booking model
â”‚   â”‚   â”œâ”€â”€ GameEvent.js         # GameEvent model
â”‚   â”‚   â”œâ”€â”€ PlayerStatistics.js  # PlayerStatistics model
â”‚   â”‚   â”œâ”€â”€ TeamStatistics.js    # TeamStatistics model
â”‚   â”‚   â”œâ”€â”€ LeagueTable.js       # LeagueTable model
â”‚   â”‚   â””â”€â”€ index.js             # Sequelize model associations
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ repositories/         # Data access layer (queries DB)
â”‚   â”‚   â”œâ”€â”€ userRepository.js    # User-related DB queries
â”‚   â”‚   â”œâ”€â”€ userRoleRepository.js # UserRole-related DB queries
â”‚   â”‚   â”œâ”€â”€ gameStatusRepository.js # GameStatus-related DB queries
â”‚   â”‚   â”œâ”€â”€ competitionTypeRepository.js # CompetitionType-related DB queries
â”‚   â”‚   â”œâ”€â”€ seasonRepository.js  # Season-related DB queries
â”‚   â”‚   â”œâ”€â”€ stadiumRepository.js # Stadium-related DB queries
â”‚   â”‚   â”œâ”€â”€ refereeRepository.js # Referee-related DB queries
â”‚   â”‚   â”œâ”€â”€ clubRepository.js    # Club-related DB queries
â”‚   â”‚   â”œâ”€â”€ teamRepository.js    # Team-related DB queries
â”‚   â”‚   â”œâ”€â”€ competitionRepository.js # Competition-related DB queries
â”‚   â”‚   â”œâ”€â”€ playerRepository.js  # Player-related DB queries
â”‚   â”‚   â”œâ”€â”€ contractRepository.js # Contract-related DB queries
â”‚   â”‚   â”œâ”€â”€ staffRepository.js   # Staff-related DB queries
â”‚   â”‚   â”œâ”€â”€ staffAssignmentRepository.js # StaffAssignment-related DB queries
â”‚   â”‚   â”œâ”€â”€ gameRepository.js    # Game-related DB queries
â”‚   â”‚   â”œâ”€â”€ goalRepository.js    # Goal-related DB queries
â”‚   â”‚   â”œâ”€â”€ substitutionRepository.js # Substitution-related DB queries
â”‚   â”‚   â”œâ”€â”€ bookingRepository.js # Booking-related DB queries
â”‚   â”‚   â”œâ”€â”€ gameEventRepository.js # GameEvent-related DB queries
â”‚   â”‚   â”œâ”€â”€ playerStatisticsRepository.js # PlayerStatistics-related DB queries
â”‚   â”‚   â”œâ”€â”€ teamStatisticsRepository.js # TeamStatistics-related DB queries
â”‚   â”‚   â””â”€â”€ leagueTableRepository.js # LeagueTable-related DB queries
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ services/             # Business services
â”‚   â”‚   â”œâ”€â”€ userService.js       # User-related services
â”‚   â”‚   â”œâ”€â”€ userRoleService.js   # UserRole-related services
â”‚   â”‚   â”œâ”€â”€ gameStatusService.js # GameStatus-related services
â”‚   â”‚   â”œâ”€â”€ competitionTypeService.js # CompetitionType-related services
â”‚   â”‚   â”œâ”€â”€ seasonService.js     # Season-related services
â”‚   â”‚   â”œâ”€â”€ stadiumService.js    # Stadium-related services
â”‚   â”‚   â”œâ”€â”€ refereeService.js    # Referee-related services
â”‚   â”‚   â”œâ”€â”€ clubService.js       # Club-related services
â”‚   â”‚   â”œâ”€â”€ teamService.js       # Team-related services
â”‚   â”‚   â”œâ”€â”€ competitionService.js # Competition-related services
â”‚   â”‚   â”œâ”€â”€ playerService.js     # Player-related services
â”‚   â”‚   â”œâ”€â”€ contractService.js   # Contract-related services
â”‚   â”‚   â”œâ”€â”€ staffService.js      # Staff-related services
â”‚   â”‚   â”œâ”€â”€ staffAssignmentService.js # StaffAssignment-related services
â”‚   â”‚   â”œâ”€â”€ gameService.js       # Game-related services
â”‚   â”‚   â”œâ”€â”€ goalService.js       # Goal-related services
â”‚   â”‚   â”œâ”€â”€ substitutionService.js # Substitution-related services
â”‚   â”‚   â”œâ”€â”€ bookingService.js    # Booking-related services
â”‚   â”‚   â”œâ”€â”€ gameEventService.js  # GameEvent-related services
â”‚   â”‚   â”œâ”€â”€ playerStatisticsService.js # PlayerStatistics-related services
â”‚   â”‚   â”œâ”€â”€ teamStatisticsService.js # TeamStatistics-related services
â”‚   â”‚   â””â”€â”€ leagueTableService.js # LeagueTable-related services
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ controllers/          # Business logic (Handles API requests)
â”‚   â”‚   â”œâ”€â”€ userController.js    # User-related logic
â”‚   â”‚   â”œâ”€â”€ userRoleController.js # UserRole-related logic
â”‚   â”‚   â”œâ”€â”€ gameStatusController.js # GameStatus-related logic
â”‚   â”‚   â”œâ”€â”€ competitionTypeController.js # CompetitionType-related logic
â”‚   â”‚   â”œâ”€â”€ seasonController.js  # Season-related logic
â”‚   â”‚   â”œâ”€â”€ stadiumController.js # Stadium-related logic
â”‚   â”‚   â”œâ”€â”€ refereeController.js # Referee-related logic
â”‚   â”‚   â”œâ”€â”€ clubController.js    # Club-related logic
â”‚   â”‚   â”œâ”€â”€ teamController.js    # Team-related logic
â”‚   â”‚   â”œâ”€â”€ competitionController.js # Competition-related logic
â”‚   â”‚   â”œâ”€â”€ playerController.js  # Player-related logic
â”‚   â”‚   â”œâ”€â”€ contractController.js # Contract-related logic
â”‚   â”‚   â”œâ”€â”€ staffController.js   # Staff-related logic
â”‚   â”‚   â”œâ”€â”€ staffAssignmentController.js # StaffAssignment-related logic
â”‚   â”‚   â”œâ”€â”€ gameController.js    # Game-related logic
â”‚   â”‚   â”œâ”€â”€ goalController.js    # Goal-related logic
â”‚   â”‚   â”œâ”€â”€ substitutionController.js # Substitution-related logic
â”‚   â”‚   â”œâ”€â”€ bookingController.js # Booking-related logic
â”‚   â”‚   â”œâ”€â”€ gameEventController.js # GameEvent-related logic
â”‚   â”‚   â”œâ”€â”€ playerStatisticsController.js # PlayerStatistics-related logic
â”‚   â”‚   â”œâ”€â”€ teamStatisticsController.js # TeamStatistics-related logic
â”‚   â”‚   â””â”€â”€ leagueTableController.js # LeagueTable-related logic
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ routes/               # API routes
â”‚   â”‚   â”œâ”€â”€ userRoutes.js        # User routes
â”‚   â”‚   â”œâ”€â”€ userRoleRoutes.js    # UserRole routes
â”‚   â”‚   â”œâ”€â”€ gameStatusRoutes.js  # GameStatus routes
â”‚   â”‚   â”œâ”€â”€ competitionTypeRoutes.js # CompetitionType routes
â”‚   â”‚   â”œâ”€â”€ seasonRoutes.js      # Season routes
â”‚   â”‚   â”œâ”€â”€ stadiumRoutes.js     # Stadium routes
â”‚   â”‚   â”œâ”€â”€ refereeRoutes.js     # Referee routes
â”‚   â”‚   â”œâ”€â”€ clubRoutes.js        # Club routes
â”‚   â”‚   â”œâ”€â”€ teamRoutes.js        # Team routes
â”‚   â”‚   â”œâ”€â”€ competitionRoutes.js # Competition routes
â”‚   â”‚   â”œâ”€â”€ playerRoutes.js      # Player routes
â”‚   â”‚   â”œâ”€â”€ contractRoutes.js    # Contract routes
â”‚   â”‚   â”œâ”€â”€ staffRoutes.js       # Staff routes
â”‚   â”‚   â”œâ”€â”€ staffAssignmentRoutes.js # StaffAssignment routes
â”‚   â”‚   â”œâ”€â”€ gameRoutes.js        # Game routes
â”‚   â”‚   â”œâ”€â”€ goalRoutes.js        # Goal routes
â”‚   â”‚   â”œâ”€â”€ substitutionRoutes.js # Substitution routes
â”‚   â”‚   â”œâ”€â”€ bookingRoutes.js     # Booking routes
â”‚   â”‚   â”œâ”€â”€ gameEventRoutes.js   # GameEvent routes
â”‚   â”‚   â”œâ”€â”€ playerStatisticsRoutes.js # PlayerStatistics routes
â”‚   â”‚   â”œâ”€â”€ teamStatisticsRoutes.js # TeamStatistics routes
â”‚   â”‚   â”œâ”€â”€ leagueTableRoutes.js # LeagueTable routes
â”‚   â”‚   â””â”€â”€ index.js             # Combines all routes
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ migrations/           # Database migrations (if using Sequelize)
â”‚   â”‚   â”œâ”€â”€ 20231001-create-user.js # Example migration for User table
â”‚   â”‚   â”œâ”€â”€ 20231001-create-club.js # Example migration for Club table
â”‚   â”‚   â””â”€â”€ ...                  # Other migrations
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ seeders/              # Database seeders (if using Sequelize)
â”‚   â”‚   â”œâ”€â”€ seed-user-roles.js   # Example seeder for UserRole table
â”‚   â”‚   â”œâ”€â”€ seed-game-statuses.js # Example seeder for GameStatus table
â”‚   â”‚   â””â”€â”€ ...                  # Other seeders
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ validations/          # Input validation
â”‚   â”‚   â”œâ”€â”€ userValidation.js    # Validation for user routes
â”‚   â”‚   â”œâ”€â”€ clubValidation.js    # Validation for club routes
â”‚   â”‚   â”œâ”€â”€ gameValidation.js    # Validation for game routes
â”‚   â”‚   â””â”€â”€ ...                  # Other validations
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ middleware/           # Custom middleware
â”‚   â”‚   â”œâ”€â”€ authMiddleware.js    # Authentication middleware
â”‚   â”‚   â”œâ”€â”€ errorHandler.js      # Error handling middleware
â”‚   â”‚   â””â”€â”€ ...                  # Other middleware
â”‚   â”‚
â”‚   â”œâ”€â”€ server.js                # Main Express server file
â”‚   â”œâ”€â”€ .env                     # Environment variables
â”‚   â”œâ”€â”€ .env.example             # Example environment variables
â”‚   â”œâ”€â”€ package.json             # Backend dependencies
â”‚   â”œâ”€â”€ README.md                # Backend documentation
â”‚   â””â”€â”€ .gitignore               # Ignore sensitive files
â”‚
â”œâ”€â”€ ðŸ“‚ frontend/                 # React.js Frontend (Admin & User)
â”‚   â”œâ”€â”€ ðŸ“‚ admin/                # Admin Dashboard
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ components/       # Reusable UI components
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ pages/            # Dashboard pages
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ services/         # API calls
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ hooks/            # Custom React Hooks
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ context/          # Global state management
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ styles/           # Custom styles
â”‚   â”‚   â”œâ”€â”€ App.js               # Main admin app component
â”‚   â”‚   â”œâ”€â”€ index.js             # Entry point for admin app
â”‚   â”‚   â”œâ”€â”€ .env                 # Admin environment variables
â”‚   â”‚   â”œâ”€â”€ package.json         # Admin dependencies
â”‚   â”‚   â”œâ”€â”€ README.md            # Admin documentation
â”‚   â”‚   â””â”€â”€ .gitignore           # Ignore unnecessary files
â”‚   â”‚
â”‚   â”œâ”€â”€ ðŸ“‚ user/                 # User-facing React App
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ components/       # Reusable UI components
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ pages/            # User pages
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ services/         # API calls
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ hooks/            # Custom React Hooks
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ context/          # Global state management
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ styles/           # Custom styles
â”‚   â”‚   â”œâ”€â”€ App.js               # Main user app component
â”‚   â”‚   â”œâ”€â”€ index.js             # Entry point for user app
â”‚   â”‚   â”œâ”€â”€ .env                 # User environment variables
â”‚   â”‚   â”œâ”€â”€ package.json         # User dependencies
â”‚   â”‚   â”œâ”€â”€ README.md            # User documentation
â”‚   â”‚   â””â”€â”€ .gitignore           # Ignore unnecessary files
â”‚
â”œâ”€â”€ ðŸ“‚ docs/                     # Documentation
â”‚   â”œâ”€â”€ api-spec.md              # API Documentation (Swagger/OpenAPI)
â”‚   â”œâ”€â”€ database-schema.png      # DB Schema Diagram
â”‚   â”œâ”€â”€ system-architecture.md   # System Architecture Overview
â”‚   â”œâ”€â”€ deployment-guide.md      # Guide for deployment
â”‚   â”œâ”€â”€ coding-standards.md      # Coding standards and best practices
â”‚   â””â”€â”€ tech-stack.md            # Technology stack overview
â”‚
â”œâ”€â”€ ðŸ“‚ scripts/                  # Deployment & automation scripts
â”‚   â”œâ”€â”€ deploy.sh                # Automated deployment script
â”‚   â”œâ”€â”€ backup-db.sh             # Backup database script
â”‚   â”œâ”€â”€ setup-env.sh             # Environment setup script
â”‚
â”œâ”€â”€ ðŸ“‚ tests/                    # Unit/Integration tests
â”‚   â”œâ”€â”€ ðŸ“‚ backend/              # Backend tests
â”‚   â”‚   â”œâ”€â”€ user.test.js         # User-related tests
â”‚   â”‚   â”œâ”€â”€ club.test.js         # Club-related tests
â”‚   â”‚   â”œâ”€â”€ game.test.js         # Game-related tests
â”‚   â”‚   â””â”€â”€ ...                  # Other tests
â”‚   â”œâ”€â”€ ðŸ“‚ frontend/             # Frontend tests
â”‚   â”‚   â”œâ”€â”€ admin/               # Admin app tests
â”‚   â”‚   â””â”€â”€ user/                # User app tests
â”‚   â”œâ”€â”€ ðŸ“‚ e2e/                  # End-to-end tests
â”‚   â”‚   â”œâ”€â”€ admin/               # Admin app E2E tests
â”‚   â”‚   â””â”€â”€ user/                # User app E2E tests
â”‚
â”œâ”€â”€ ðŸ“‚ assets/                   # Shared static assets
â”‚   â”œâ”€â”€ images/                  # Images (logos, icons, etc.)
â”‚   â”œâ”€â”€ fonts/                   # Custom fonts
â”‚   â””â”€â”€ icons/                   # SVG icons
â”‚
â”œâ”€â”€ ðŸ“‚ build/                    # Build outputs (for deployment)
â”‚
â”œâ”€â”€ ðŸ“‚ licenses/                 # License files
â”‚   â”œâ”€â”€ LICENSE                  # Apache License 2.0
â”‚   â””â”€â”€ NOTICE                   # Attribution notice (optional)
â”‚
â”œâ”€â”€ .gitignore                   # Ignore unnecessary files
â”œâ”€â”€ docker-compose.yml           # Docker configuration
â”œâ”€â”€ package.json                 # Root dependencies
â””â”€â”€ README.md                    # Main project documentation